name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      S3_BUCKET: tf-infra-aws

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install yq
      run: |
        sudo apt-get update && sudo apt-get install -y jq
        wget https://github.com/mikefarah/yq/releases/download/v4.13.3/yq_linux_amd64 -O yq
        chmod +x yq
        sudo mv yq /usr/local/bin/yq

    - name: Read Deployment Configuration
      id: read-config
      run: |
        CONFIG_FILE=".ebconfig.yml"
        APP_NAME=$(yq eval '.app_name' $CONFIG_FILE)
        ENV_NAME=$(yq eval '.environment_name' $CONFIG_FILE)
        REPO_NAME=$(yq eval '.ecr_repo_name' $CONFIG_FILE)
        REGION=$(yq eval '.region' $CONFIG_FILE)
        echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
        echo "ENV_NAME=$ENV_NAME" >> $GITHUB_ENV
        echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
        echo "REGION=$REGION" >> $GITHUB_ENV

    - name: Generate Version Label
      run: |
        VERSION_LABEL=$(date +%Y%m%d%H%M%S)-${{ github.sha }}
        echo "VERSION_LABEL=$VERSION_LABEL" >> $GITHUB_ENV

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region $REGION | \
        docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com

    - name: Build and Tag Docker Image
      run: |
        docker build -t $REPO_NAME:$VERSION_LABEL .
        docker tag $REPO_NAME:$VERSION_LABEL $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPO_NAME:$VERSION_LABEL

    - name: Push Docker Image to ECR
      run: |
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPO_NAME:$VERSION_LABEL

    - name: Generate Dockerrun.aws.json
      run: |
        cat <<EOF > Dockerrun.aws.json
        {
          "AWSEBDockerrunVersion": "1",
          "Image": {
            "Name": "${AWS_ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${REPO_NAME}:${VERSION_LABEL}",
            "Update": "true"
          },
          "Ports": [
            {
              "ContainerPort": "8005"
            }
          ]
        }
        EOF

    - name: Upload Dockerrun.aws.json to S3
      run: |
        aws s3 cp Dockerrun.aws.json s3://${S3_BUCKET}/docker-app-${VERSION_LABEL}.zip

    - name: Create Elastic Beanstalk Application Version
      run: |
        aws elasticbeanstalk create-application-version \
          --application-name "$APP_NAME" \
          --version-label "$VERSION_LABEL" \
          --source-bundle S3Bucket=${S3_BUCKET},S3Key=docker-app-${VERSION_LABEL}.zip

    - name: Update Elastic Beanstalk Environment
      run: |
        aws elasticbeanstalk update-environment \
          --application-name "$APP_NAME" \
          --environment-name "$ENV_NAME" \
          --version-label "$VERSION_LABEL"
