name: Dynamic Deployment to Elastic Beanstalk

on:
  push:
    branches:
      - main
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install yq
      run: |
        sudo apt-get update && sudo apt-get install -y jq
        wget https://github.com/mikefarah/yq/releases/download/v4.13.3/yq_linux_amd64 -O yq
        chmod +x yq
        sudo mv yq /usr/local/bin/yq

    - name: Validate Deployment Configuration
      run: |
        if [ ! -f ".ebconfig.yml" ]; then
          echo "Configuration file .ebconfig.yml not found!" && exit 1
        fi
        yq eval '.app_name, .environment_name, .ecr_repo_name, .region' .ebconfig.yml

    - name: Read Deployment Configuration
      id: read-config
      run: |
        CONFIG_FILE=".ebconfig.yml"
        APP_NAME=$(yq eval '.app_name' $CONFIG_FILE)
        ENV_NAME=$(yq eval '.environment_name' $CONFIG_FILE)
        REPO_NAME=$(yq eval '.ecr_repo_name' $CONFIG_FILE)
        REGION=$(yq eval '.region' $CONFIG_FILE)
        echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
        echo "ENV_NAME=$ENV_NAME" >> $GITHUB_ENV
        echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
        echo "REGION=$REGION" >> $GITHUB_ENV

    - name: Generate Application Version Label
      run: |
        VERSION_LABEL=$(date +%Y%m%d%H%M%S)-${{ github.sha::8 }}
        echo "VERSION_LABEL=$VERSION_LABEL" >> $GITHUB_ENV
        echo "Generated Version Label: $VERSION_LABEL"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.REGION }}

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region $REGION | \
        docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com

    - name: Build and tag Docker image
      run: |
        docker build -t $REPO_NAME:$VERSION_LABEL .
        docker tag $REPO_NAME:$VERSION_LABEL $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPO_NAME:$VERSION_LABEL

    - name: Push Docker image to ECR
      run: |
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPO_NAME:$VERSION_LABEL

    - name: Create Elastic Beanstalk Application Version
      run: |
        aws elasticbeanstalk create-application-version \
          --application-name "$APP_NAME" \
          --version-label "$VERSION_LABEL" \
          --source-bundle S3Bucket=elasticbeanstalk-$REGION-$AWS_ACCOUNT_ID,S3Key=docker-app-$VERSION_LABEL.zip \
          --auto-create-application

    - name: Update Elastic Beanstalk Environment
      run: |
        aws elasticbeanstalk update-environment \
          --application-name "$APP_NAME" \
          --environment-name "$ENV_NAME" \
          --version-label "$VERSION_LABEL"

    - name: Clean Up Old Versions
      if: github.ref_name == 'main'
      run: |
        aws elasticbeanstalk describe-application-versions \
          --application-name "$APP_NAME" --query 'ApplicationVersions[?VersionLabel!=`'"$VERSION_LABEL"'`].VersionLabel' --output text | \
        while read -r OLD_VERSION; do
          echo "Deleting old version: $OLD_VERSION"
          aws elasticbeanstalk delete-application-version \
            --application-name "$APP_NAME" \
            --version-label "$OLD_VERSION" \
            --delete-source-bundle || true
        done
